from ev3dev2.motor import LargeMotor, MediumMotor, OUTPUT_A, OUTPUT_B, OUTPUT_C
from ev3dev2.sensor import INPUT_1, INPUT_2
from ev3dev2.sensor.lego import ColorSensor, UltrasonicSensor
from ev3dev2.motor import MoveTank
from time import sleep

# Initialize motors and sensors
left_motor = LargeMotor(OUTPUT_A)
right_motor = LargeMotor(OUTPUT_B)
gripper_motor = MediumMotor(OUTPUT_C)
color_sensor = ColorSensor(INPUT_1)
ultrasonic_sensor = UltrasonicSensor(INPUT_2)

# Function to move forward for a specified duration
def move_forward(speed, duration):
    left_motor.on(speed)
    right_motor.on(speed)
    sleep(duration)
    left_motor.off()
    right_motor.off()

# Function to turn the robot
def turn(direction, duration):
    if direction == "left":
        left_motor.on(-30)
        right_motor.on(30)
    elif direction == "right":
        left_motor.on(30)
        right_motor.on(-30)
    sleep(duration)
    left_motor.off()
    right_motor.off()

# Function to pick up a block
def pick_up_block():
    gripper_motor.on_for_seconds(50, 2)

# Function to drop a block
def drop_block():
    gripper_motor.on_for_seconds(-50, 2)

# Function to avoid obstacles
def avoid_obstacle():
    move_forward(-30, 1)  # Move backward
    turn("right", 1)      # Turn right

# Main program loop
for _ in range(2):  # Repeat for two blocks (red and yellow)
    move_forward(30, 2)  # Move forward to search for blocks

    # Check for a block
    if color_sensor.color == ColorSensor.COLOR_RED:
        pick_up_block()
        move_forward(30, 2)  # Move to the designated position
        drop_block()
    elif color_sensor.color == ColorSensor.COLOR_YELLOW:
        pick_up_block()
        move_forward(30, 2)  # Move to the designated position
        drop_block()

    # Check for obstacles
    if ultrasonic_sensor.distance_centimeters < 20:
        avoid_obstacle()

# Final move to the designated position
move_forward(30, 3)