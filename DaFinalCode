from ev3dev2.motor import LargeMotor, MediumMotor, OUTPUT_A, OUTPUT_B, OUTPUT_C
from ev3dev2.sensor import INPUT_1, INPUT_2
from ev3dev2.sensor.lego import ColorSensor, UltrasonicSensor
from time import sleep

# Initialize motors and sensors
left_motor = LargeMotor(OUTPUT_A)
right_motor = LargeMotor(OUTPUT_B)
gripper_motor = MediumMotor(OUTPUT_C)
color_sensor = ColorSensor(INPUT_1)
ultrasonic_sensor = UltrasonicSensor(INPUT_2)

# Function to move the robot forward
def move_forward(speed, duration):
    left_motor.on(speed)
    right_motor.on(speed)
    sleep(duration)
    stop_motors()

# Function to stop the motors
def stop_motors():
    left_motor.off()
    right_motor.off()

# Function to turn the robot
def turn(direction, duration):
    if direction == "left":
        left_motor.on(-30)
        right_motor.on(30)
    elif direction == "right":
        left_motor.on(30)
        right_motor.on(-30)
    sleep(duration)
    stop_motors()

# Function to pick up a block
def pick_up_block():
    gripper_motor.on_for_seconds(50, 2)

# Function to drop a block
def drop_block():
    gripper_motor.on_for_seconds(-50, 2)

# Function to avoid obstacles
def avoid_obstacle():
    move_forward(-30, 1)  # Move backward
    turn("right", 1)      # Turn right

# Function to handle a block based on its color
def handle_block(color):
    if color == ColorSensor.COLOR_RED:
        print("Red block detected!")
        pick_up_block()
        move_to_designated_position()
        drop_block()
    elif color == ColorSensor.COLOR_YELLOW:
        print("Yellow block detected!")
        pick_up_block()
        move_to_designated_position()
        drop_block()

# Function to move to the designated position
def move_to_designated_position():
    move_forward(30, 2)

# Main program logic
def main():
    blocks_to_collect = 2  # Number of blocks to collect (red and yellow)
    collected_blocks = 0

    while collected_blocks < blocks_to_collect:
        move_forward(30, 2)  # Move forward to search for blocks

        # Check for a block
        detected_color = color_sensor.color
        if detected_color in [ColorSensor.COLOR_RED, ColorSensor.COLOR_YELLOW]:
            handle_block(detected_color)
            collected_blocks += 1

        # Check for obstacles
        if ultrasonic_sensor.distance_centimeters < 20:
            print("Obstacle detected! Avoiding...")
            avoid_obstacle()

    # Final move to the designated position
    move_forward(30, 3)
    print("Task completed!")

# Run the main program
if __name__ == "__main__":
    main()